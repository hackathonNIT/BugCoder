//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "ind.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string ind::genText(const DrTemplateData& ind_view_data)
{
	drogon::OStringStream ind_tmp_stream;
	std::string layoutName{""};
	ind_tmp_stream << "<!DOCTYPE html>\n";
	ind_tmp_stream << "<html>\n";
// dataからunorder_mapとしてパラメータを取得
auto para = ind_view_data.get<std::unordered_map<std::string, std::string>>("parameters");
 
// 適当に変数宣言してみる
auto name = "RightCode Inc.";
auto date = "2020.08.01";
	ind_tmp_stream << "<head>\n";
	ind_tmp_stream << "  <link rel=\"stylesheet\" href=\"style.css\">\n";
	ind_tmp_stream << "  <meta charset=\"UTF-8\">\n";
	ind_tmp_stream << "  <title>BagCoder</title>\n";
	ind_tmp_stream << "</head>\n";
	ind_tmp_stream << "<body>\n";
	ind_tmp_stream << "<header>\n";
	ind_tmp_stream << "  <div class=\"flexbox\">\n";
	ind_tmp_stream << "    <h1>Bag</h1>\n";
	ind_tmp_stream << "    <h1>Coder</h1>\n";
	ind_tmp_stream << "    <nav>\n";
	ind_tmp_stream << "      <ul class=\"global-nav\">\n";
	ind_tmp_stream << "        <li><a class=\"a1\" href=\"index.html\">ページ概要</a></li>\n";
	ind_tmp_stream << "        <li><a class=\"a1\" href=\"index.html\">投稿する</a></li>\n";
	ind_tmp_stream << "        <li><a class=\"a1\" href=\"index.html\">アカウント</a>\n";
	ind_tmp_stream << "          <ul class=\"nav2\" >\n";
	ind_tmp_stream << "            <AcountMenu/>\n";
	ind_tmp_stream << "            <li class=\"solid1\"><a class=\" downlist\" href=\"index.html\">プロフィール</a></li>\n";
	ind_tmp_stream << "            <li class=\"solid1\"><a class=\" downlist\" href=\"index.html\">ユーザー設定</a></li>\n";
	ind_tmp_stream << "          </ul>\n";
	ind_tmp_stream << "        </li>\n";
	ind_tmp_stream << "      </ul>\n";
	ind_tmp_stream << "    </nav>\n";
	ind_tmp_stream << "  </div>\n";
	ind_tmp_stream << "</header>\n";
	ind_tmp_stream << "</body>\n";
	ind_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(ind_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = ind_view_data;
auto str = std::move(ind_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
