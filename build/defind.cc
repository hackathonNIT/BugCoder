//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "defind.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string defind::genText(const DrTemplateData& defind_view_data)
{
	drogon::OStringStream defind_tmp_stream;
	std::string layoutName{""};
	defind_tmp_stream << "<!DOCTYPE html>\n";
	defind_tmp_stream << "<html>\n";
	defind_tmp_stream << "<head>\n";
	defind_tmp_stream << "    <meta charset=\"UTF-8\">\n";
	defind_tmp_stream << "    <title>";
{
    auto & val=defind_view_data["title"];
    if(val.type()==typeid(const char *)){
        defind_tmp_stream<<*(std::any_cast<const char *>(&val));
    }else if(val.type()==typeid(std::string)||val.type()==typeid(const std::string)){
        defind_tmp_stream<<*(std::any_cast<const std::string>(&val));
    }
}
	defind_tmp_stream << "</title>\n";
	defind_tmp_stream << "    ";
 auto css_path=defind_view_data.get<std::string>("css_path"); 
	defind_tmp_stream << "    ";
 auto logo_path=defind_view_data.get<std::string>("logo_path"); 
	defind_tmp_stream << "    <link rel=\"stylesheet\" type=\"text/css\" href=\"";
defind_tmp_stream<<css_path;
	defind_tmp_stream << "\">\n";
	defind_tmp_stream << "</head>\n";
	defind_tmp_stream << "<body>\n";
	defind_tmp_stream << "  <header>\n";
	defind_tmp_stream << "    <div class=\"flexbox\">\n";
	defind_tmp_stream << "      <img class=\"logo\" src=";
defind_tmp_stream<<logo_path;
	defind_tmp_stream << " alt=\"logo\"/>\n";
	defind_tmp_stream << "      <h1>Bag</h1>\n";
	defind_tmp_stream << "      <h1>Coder</h1>\n";
	defind_tmp_stream << "      <nav>\n";
	defind_tmp_stream << "        <ul class=\"global-nav\">\n";
	defind_tmp_stream << "          <li><a class=\"a1\" href=\"index.html\">ページ概要</a></li>\n";
	defind_tmp_stream << "          <li><a class=\"a1\" href=\"index.html\">投稿する</a></li>\n";
	defind_tmp_stream << "          <li><a class=\"a1\" href=\"index.html\">アカウント</a>\n";
	defind_tmp_stream << "            <ul class=\"nav2\" >\n";
	defind_tmp_stream << "              <AcountMenu/>\n";
	defind_tmp_stream << "              <li class=\"solid1\"><a class=\" downlist\" href=\"index.html\">プロフィール</a></li>\n";
	defind_tmp_stream << "              <li class=\"solid1\"><a class=\" downlist\" href=\"index.html\">ユーザー設定</a></li>\n";
	defind_tmp_stream << "            </ul>\n";
	defind_tmp_stream << "          </li>\n";
	defind_tmp_stream << "        </ul>\n";
	defind_tmp_stream << "      </nav>\n";
	defind_tmp_stream << "    </div>\n";
	defind_tmp_stream << "  </header>\n";
	defind_tmp_stream << "  <div class=\"flex-div\">\n";
	defind_tmp_stream << "    \n";
	defind_tmp_stream << "    <div class=\"info-div\">\n";
	defind_tmp_stream << "      <p class=\"titlep\">ここはデバッガーとその助けを必要とする人のためのサイトです。</p>\n";
	defind_tmp_stream << "      <p class=\"contp\">BC（Bag Coder）はプログラミングにおけるバグ解決の新しい次元を提供するSNSプラットフォームです。</p>\n";
	defind_tmp_stream << "      <p class=\"contp\">ユーザー（発見者）はバグの詳細な説明やプログラム, 入出力のサンプルセットを投稿し、他のユーザー（デバッガー）はその問題を解決するプログラムを提供します。</p>\n";
	defind_tmp_stream << "    </div>\n";
	defind_tmp_stream << "  </div>\n";
	defind_tmp_stream << "</body>\n";
	defind_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(defind_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = defind_view_data;
auto str = std::move(defind_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
